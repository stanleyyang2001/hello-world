// This is a static diagram that aims to demonstrate the motion of object in a trajectory with the use of a slingshot
// reference: https://angrybirds.fandom.com/wiki/Slingshot

// added feature for animation: allow user to enter 1 or 2 to change the ball to be circular ro a square respectively
// added rotation to the ball, choose square as the ball for visual effect of rotation.
var ballX = 65;
var ballY = 300;
var originX = ballX;
var originY = ballY;

var bodyRadius = 40
var stretch = false;
var motion = false;

var distanceStretchX;
var distanceStretchY;

var initialSpeed;

var shotted = false;
var time = 0;

var mode = 1;
function setup() {
  createCanvas(1200, 400);
  rectMode(CENTER)
}

function draw() {
  background(155);
  fill(255)
  strokeWeight(0)
  textSize(20)
  text("Pressed the ball to stretch, release the mouse to shot",200,100,)
  text("Pressed the mouse again to stop the ball",200,150)
  text("Pressed 1 for circular ball, press 2 for square",200,200)
  if (key == 1){
    mode = 1;
  } else {
    mode = 2;
  }
  
  // land
  fill("black");
  strokeWeight(0);
  var ground = rect(600,400,1300,200);
  

  
  // slingshot
  strokeWeight(12);
  stroke("white");
  var stick1 = line(175*0.5, 300, 150*0.5, 340);
  stroke("white");
  
  // sling 1
  strokeWeight(8);
  stroke(120);
  if (((ballX-bodyRadius/2) > 50 && (ballY) > 100) || shotted){
    line(175*0.5, 300, 135*0.5, 300)
    shotted = true;
  } else if (!shotted) {
    line(175*0.5,300, ballX-bodyRadius/2, ballY)
    }
  
  // ball
  strokeWeight(1);
  fill("black");
  push()
  translate(ballX, ballY)
  if (!motion){
    switch(mode){
      case 1:
        var ball = circle(0,0,bodyRadius);
        break;
      case 2:
        var sqr = rect(0, 0, bodyRadius,bodyRadius);
        break;         
    }

  }
  pop()
  
  strokeWeight(2)
  
  // interactive component
  
  var d = dist(mouseX, mouseY, ballX, ballY);
  if (mouseIsPressed && d < bodyRadius){
      // limit of initial stretch
      if (mouseX < 70 && mouseX > 0)
        {
          ballX = mouseX;
        }
      if (mouseY < 370 && mouseY > 200){
        ballY = mouseY;
      }
          switch(mode){
        case 1:
        circle(ballX,ballY,bodyRadius);
        break;
      case 2:
        rect(ballX, ballY, bodyRadius,bodyRadius);
        break;         
    }
    stretch = true;
    
  }else if (!mouseIsPressed && stretch){  // release
    
    stretch = false
    motion = true;
    
    distanceStretchX = (originX-mouseX)*0.03;
    distanceStretchY = (originY-mouseY)*0.1;
    
    initialSpeed = dist(mouseX, mouseY, originX, originY) 
  }
    else if (!mouseIsPressed && motion){  // moving
      time +=0.5
    ballX = ballX+distanceStretchX+initialSpeed*0.04
    ballY = ballY+distanceStretchY+initialSpeed*0.0025*(time)
    push()
    translate(ballX, ballY)
    rotate(time*0.2)
    switch(mode){
      case 1:
        circle(0,0,bodyRadius);
        break;
      case 2:
        rect(0, 0, bodyRadius,bodyRadius);
        break;         
    }
    pop()
      if (ballY > 500){
        // reset all motion related incrementing variables
        motion = false;
        shotted = false;
        ballX = originX;
        ballY = originY;
        time = 0;
        //circle(ballX, ballY, bodyRadius)
        push()
        translate(ballX, ballY)
        switch(mode){
          case 1:
            circle(0,0,bodyRadius);
            break;
          case 2:
            rect(0, 0, bodyRadius,bodyRadius);
            break;         
    }
        pop()
      }
  }

  else {
        switch(mode){
          case 1:
            circle(ballX,ballY,bodyRadius);
            break;
        case 2:
            rect(ballX, ballY, bodyRadius,bodyRadius);
            break;         
    }
  }

  
  
  // rest of the sling shot
  strokeWeight(12);
  stroke("white")
  var stick2 = line(100*0.5,300, 150*0.5,340);
  var stick3 = line(150*0.5,340, 150*0.5, 380);
  
  var d = dist(175*0.5, 300, ballX, ballY) + bodyRadius;
  strokeWeight(8);
  stroke(120);
  if (((ballX-bodyRadius/2) > 50 && (ballY) > 100) || shotted){
    line(100*0.5, 300, 135*0.5, 300)
    shotted = true;
  } else if (!shotted){
    line(100*0.5,300, ballX-bodyRadius/2, ballY);
    }
  



}
